// Generated by CoffeeScript 1.10.0
;(() => {
  let autoLink
  const slice = [].slice

  autoLink = function (...args) {
    let callback
    let k
    let linkAttributes
    let option
    let options
    let pattern
    let v
    options = 1 <= args.length ? slice.call(args, 0) : []
    pattern = /(^|[\s\n]|<[A-Za-z]*\/?>)((?:https?|ftp):\/\/[\-A-Z0-9+\u0026\u2019@#\/%?=()~_|!:,.;]*[\-A-Z0-9+\u0026@#\/%=~()_|])/gi
    if (!(options.length > 0)) {
      return this.replace(pattern, "$1<a target='_blank' href='$2'>$2</a>")
    }
    option = options[0]
    callback = option['callback']
    linkAttributes = (() => {
      let results
      results = []
      for (k in option) {
        v = option[k]
        if (k !== 'callback') {
          results.push(` ${k}='${v}'`)
        }
      }
      return results
    })().join('')
    return this.replace(pattern, (match, space, url) => {
      let link
      link =
        (typeof callback === 'function' ? callback(url) : void 0) ||
        `<a target='_blank' href='${url}'${linkAttributes}>${url}</a>`
      return `${space}${link}`
    })
  }

  String.prototype['autoLink'] = autoLink
}).call(this)
